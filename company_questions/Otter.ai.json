[
  {
    "company": "Otter.ai",
    "timeframe": "6_months",
    "title": "Trapping Rain Water II",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/trapping-rain-water-ii",
    "asked_on": "",
    "tags": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "6_months",
    "title": "Word Break",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/word-break",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "6_months",
    "title": "Flatten Deeply Nested Array",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/flatten-deeply-nested-array",
    "asked_on": "",
    "tags": []
  },
  {
    "company": "Otter.ai",
    "timeframe": "more_than_6_months",
    "title": "The Number of the Smallest Unoccupied Chair",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/the-number-of-the-smallest-unoccupied-chair",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Heap (Priority Queue)"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "more_than_6_months",
    "title": "Trapping Rain Water II",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/trapping-rain-water-ii",
    "asked_on": "",
    "tags": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "all_time",
    "title": "Trapping Rain Water II",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/trapping-rain-water-ii",
    "asked_on": "",
    "tags": [
      "Array",
      "Breadth-First Search",
      "Heap (Priority Queue)",
      "Matrix"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "all_time",
    "title": "The Number of the Smallest Unoccupied Chair",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/the-number-of-the-smallest-unoccupied-chair",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Heap (Priority Queue)"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "all_time",
    "title": "Frog Jump",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/frog-jump",
    "asked_on": "",
    "tags": [
      "Array",
      "Dynamic Programming"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "all_time",
    "title": "Word Break",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/word-break",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "company": "Otter.ai",
    "timeframe": "all_time",
    "title": "Flatten Deeply Nested Array",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/flatten-deeply-nested-array",
    "asked_on": "",
    "tags": []
  }
]