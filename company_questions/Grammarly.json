[
  {
    "company": "Grammarly",
    "timeframe": "30_days",
    "title": "Generate Parentheses",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "asked_on": "",
    "tags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "30_days",
    "title": "Sqrt(x)",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sqrtx",
    "asked_on": "",
    "tags": [
      "Math",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Sqrt(x)",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sqrtx",
    "asked_on": "",
    "tags": [
      "Math",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Remove All Adjacent Duplicates In String",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Remove All Adjacent Duplicates in String II",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Generate Parentheses",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "asked_on": "",
    "tags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Insert Delete GetRandom O(1)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Implement Trie (Prefix Tree)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Search in Rotated Sorted Array",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "asked_on": "",
    "tags": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Merge Intervals",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/merge-intervals",
    "asked_on": "",
    "tags": [
      "Array",
      "Sorting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "3_months",
    "title": "Perfect Number",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/perfect-number",
    "asked_on": "",
    "tags": [
      "Math"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Merge Intervals",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/merge-intervals",
    "asked_on": "",
    "tags": [
      "Array",
      "Sorting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Remove All Adjacent Duplicates In String",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Remove All Adjacent Duplicates in String II",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Insert Delete GetRandom O(1)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Search in Rotated Sorted Array",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "asked_on": "",
    "tags": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Sqrt(x)",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sqrtx",
    "asked_on": "",
    "tags": [
      "Math",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Generate Parentheses",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "asked_on": "",
    "tags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Vowel Spellchecker",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/vowel-spellchecker",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Climbing Stairs",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/climbing-stairs",
    "asked_on": "",
    "tags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Implement Trie (Prefix Tree)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Perfect Number",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/perfect-number",
    "asked_on": "",
    "tags": [
      "Math"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Sum of Left Leaves",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sum-of-left-leaves",
    "asked_on": "",
    "tags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Special Binary String",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/special-binary-string",
    "asked_on": "",
    "tags": [
      "String",
      "Recursion"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Decode the Slanted Ciphertext",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/decode-the-slanted-ciphertext",
    "asked_on": "",
    "tags": [
      "String",
      "Simulation"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "6_months",
    "title": "Maximum Palindromes After Operations",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/maximum-palindromes-after-operations",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Counting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Merge Intervals",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/merge-intervals",
    "asked_on": "",
    "tags": [
      "Array",
      "Sorting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Remove All Adjacent Duplicates In String",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Remove All Adjacent Duplicates in String II",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Backspace String Compare",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/backspace-string-compare",
    "asked_on": "",
    "tags": [
      "Two Pointers",
      "String",
      "Stack",
      "Simulation"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Repeated DNA Sequences",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/repeated-dna-sequences",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Word Break II",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/word-break-ii",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Trie",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Number of Islands",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/number-of-islands",
    "asked_on": "",
    "tags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Word Search",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/word-search",
    "asked_on": "",
    "tags": [
      "Array",
      "String",
      "Backtracking",
      "Matrix"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Vowel Spellchecker",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/vowel-spellchecker",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Generate Parentheses",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "asked_on": "",
    "tags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Word Break",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/word-break",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Insert Delete GetRandom O(1)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Climbing Stairs",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/climbing-stairs",
    "asked_on": "",
    "tags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Perfect Number",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/perfect-number",
    "asked_on": "",
    "tags": [
      "Math"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Sleep",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sleep",
    "asked_on": "",
    "tags": []
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Logger Rate Limiter",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/logger-rate-limiter",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "Design",
      "Data Stream"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "more_than_6_months",
    "title": "Search in Rotated Sorted Array",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "asked_on": "",
    "tags": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Merge Intervals",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/merge-intervals",
    "asked_on": "",
    "tags": [
      "Array",
      "Sorting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Remove All Adjacent Duplicates In String",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Remove All Adjacent Duplicates in String II",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii",
    "asked_on": "",
    "tags": [
      "String",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Insert Delete GetRandom O(1)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/insert-delete-getrandom-o1",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Math",
      "Design",
      "Randomized"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Generate Parentheses",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/generate-parentheses",
    "asked_on": "",
    "tags": [
      "String",
      "Dynamic Programming",
      "Backtracking"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Search in Rotated Sorted Array",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/search-in-rotated-sorted-array",
    "asked_on": "",
    "tags": [
      "Array",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Sqrt(x)",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sqrtx",
    "asked_on": "",
    "tags": [
      "Math",
      "Binary Search"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Vowel Spellchecker",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/vowel-spellchecker",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Perfect Number",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/perfect-number",
    "asked_on": "",
    "tags": [
      "Math"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Word Break II",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/word-break-ii",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Backtracking",
      "Trie",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Repeated DNA Sequences",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/repeated-dna-sequences",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "String",
      "Bit Manipulation",
      "Sliding Window",
      "Rolling Hash",
      "Hash Function"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Climbing Stairs",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/climbing-stairs",
    "asked_on": "",
    "tags": [
      "Math",
      "Dynamic Programming",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Backspace String Compare",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/backspace-string-compare",
    "asked_on": "",
    "tags": [
      "Two Pointers",
      "String",
      "Stack",
      "Simulation"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Word Break",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/word-break",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Dynamic Programming",
      "Trie",
      "Memoization"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Word Search",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/word-search",
    "asked_on": "",
    "tags": [
      "Array",
      "String",
      "Backtracking",
      "Matrix"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Number of Islands",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/number-of-islands",
    "asked_on": "",
    "tags": [
      "Array",
      "Depth-First Search",
      "Breadth-First Search",
      "Union Find",
      "Matrix"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Sum of Left Leaves",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sum-of-left-leaves",
    "asked_on": "",
    "tags": [
      "Tree",
      "Depth-First Search",
      "Breadth-First Search",
      "Binary Tree"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Implement Trie (Prefix Tree)",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/implement-trie-prefix-tree",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "String",
      "Design",
      "Trie"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Logger Rate Limiter",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/logger-rate-limiter",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "Design",
      "Data Stream"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Special Binary String",
    "difficulty": "HARD",
    "link": "https://leetcode.com/problems/special-binary-string",
    "asked_on": "",
    "tags": [
      "String",
      "Recursion"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Decode the Slanted Ciphertext",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/decode-the-slanted-ciphertext",
    "asked_on": "",
    "tags": [
      "String",
      "Simulation"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Evaluate Reverse Polish Notation",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/evaluate-reverse-polish-notation",
    "asked_on": "",
    "tags": [
      "Array",
      "Math",
      "Stack"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Set Mismatch",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/set-mismatch",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "Bit Manipulation",
      "Sorting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Maximum Palindromes After Operations",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/maximum-palindromes-after-operations",
    "asked_on": "",
    "tags": [
      "Array",
      "Hash Table",
      "String",
      "Greedy",
      "Sorting",
      "Counting"
    ]
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Sleep",
    "difficulty": "EASY",
    "link": "https://leetcode.com/problems/sleep",
    "asked_on": "",
    "tags": []
  },
  {
    "company": "Grammarly",
    "timeframe": "all_time",
    "title": "Clone Graph",
    "difficulty": "MEDIUM",
    "link": "https://leetcode.com/problems/clone-graph",
    "asked_on": "",
    "tags": [
      "Hash Table",
      "Depth-First Search",
      "Breadth-First Search",
      "Graph"
    ]
  }
]